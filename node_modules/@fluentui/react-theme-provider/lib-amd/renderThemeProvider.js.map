{"version":3,"file":"renderThemeProvider.js","sourceRoot":"../src/","sources":["renderThemeProvider.tsx"],"names":[],"mappings":";;;IAOa,QAAA,mBAAmB,GAAG,UAAC,KAAyB;QACrD,IAAA,4BAAsC,EAApC,gBAAK,EAAE,wBAA6B,CAAC;QACrC,IAAA,mBAAK,EAAE,2CAAiB,CAAW;QAE3C,OAAO,CACL,oBAAC,2BAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK;YACjC,oBAAC,uCAAoB,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,CAAC,QAAS;gBACnD,oBAAC,6BAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,iBAAiB;oBAClD,oBAAC,KAAK,CAAC,IAAI,uBAAK,SAAS,CAAC,IAAI,EAAI,CACP,CACC,CACV,CACzB,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { ThemeProviderState } from './ThemeProvider.types';\nimport { getSlots } from '@fluentui/react-compose/lib/next/index';\nimport { CustomizerContext } from '@uifabric/utilities';\nimport { ThemeContext } from './ThemeContext';\nimport { StyleRendererContext } from './styleRenderers/useStyleRenderer';\n\nexport const renderThemeProvider = (state: ThemeProviderState) => {\n  const { slots, slotProps } = getSlots(state);\n  const { theme, customizerContext } = state;\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <StyleRendererContext.Provider value={state.renderer!}>\n        <CustomizerContext.Provider value={customizerContext}>\n          <slots.root {...slotProps.root} />\n        </CustomizerContext.Provider>\n      </StyleRendererContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n"]}