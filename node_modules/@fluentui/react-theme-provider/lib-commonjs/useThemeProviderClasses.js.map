{"version":3,"file":"useThemeProviderClasses.js","sourceRoot":"../src/","sources":["useThemeProviderClasses.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,iDAA0C;AAC1C,yEAA8D;AAC9D,2CAA0C;AAE1C,6DAA4D;AAG5D,IAAM,sBAAsB,GAAG,uBAAU,CAAC,UAAC,KAAY;;IAC7C,IAAA,qBAAM,CAAW;IACzB,IAAM,WAAW,GAAG,yCAAmB,CAAC,MAAM,CAAC,CAAC;IAEhD,OAAO;QACL,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE;YACJ;gBACE,KAAK,oBAAE,MAAM,0CAAE,KAAK,0CAAE,IAAI,0CAAE,YAAY;gBACxC,UAAU,oBAAE,MAAM,0CAAE,KAAK,0CAAE,IAAI,0CAAE,UAAU;gBAC3C,UAAU,cAAE,MAAM,0CAAE,IAAI,0CAAE,UAAU;gBACpC,UAAU,cAAE,MAAM,0CAAE,IAAI,0CAAE,UAAU;gBACpC,QAAQ,cAAE,MAAM,0CAAE,IAAI,0CAAE,QAAQ;gBAChC,mBAAmB,cAAE,MAAM,0CAAE,IAAI,0CAAE,mBAAmB;gBACtD,mBAAmB,cAAE,MAAM,0CAAE,IAAI,0CAAE,mBAAmB;aACvD;SACF;KAEqB,CAAC;AAC3B,CAAC,CAAC,CAAC;AAEH;;GAEG;AACH,SAAS,mBAAmB,CAAC,KAAyB,EAAE,cAAwB;;IACtE,IAAA,uBAAO,CAAW;IAE1B,IAAM,WAAW,GAAG,OAAO,KAAK,MAAM,CAAC;IACvC,IAAM,IAAI,SAAG,mCAAW,EAAE,0CAAE,IAAI,CAAC;IAEjC,KAAK,CAAC,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE;YACzB,OAAO;SACR;QAED,KAA2B,UAAc,EAAd,iCAAc,EAAd,4BAAc,EAAd,IAAc,EAAE;YAAtC,IAAM,YAAY,uBAAA;YACrB,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aAClC;SACF;QAED,OAAO;YACL,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE;gBACzB,OAAO;aACR;YAED,KAA2B,UAAc,EAAd,iCAAc,EAAd,4BAAc,EAAd,IAAc,EAAE;gBAAtC,IAAM,YAAY,uBAAA;gBACrB,IAAI,YAAY,EAAE;oBAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;iBACrC;aACF;QACH,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,SAAgB,uBAAuB,CAAC,KAAyB;IAC/D,IAAM,OAAO,GAAG,sBAAsB,CAAC,KAAK,CAAC,CAAC;IACtC,IAAA,2BAAS,EAAE,uBAAO,CAAW;IAErC,mBAAmB,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAEzD,KAAK,CAAC,SAAS,GAAG,eAAG,CAAC,SAAS,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;AACxF,CAAC;AAPD,0DAOC","sourcesContent":["import * as React from 'react';\nimport { css } from '@uifabric/utilities';\nimport { useDocument } from '@fluentui/react-window-provider';\nimport { makeStyles } from './makeStyles';\nimport { ThemeProviderState } from './ThemeProvider.types';\nimport { tokensToStyleObject } from './tokensToStyleObject';\nimport { Theme } from './types';\n\nconst useThemeProviderStyles = makeStyles((theme: Theme) => {\n  const { tokens } = theme;\n  const tokenStyles = tokensToStyleObject(tokens);\n\n  return {\n    root: tokenStyles,\n    body: [\n      {\n        color: tokens?.color?.body?.contentColor,\n        background: tokens?.color?.body?.background,\n        fontFamily: tokens?.body?.fontFamily,\n        fontWeight: tokens?.body?.fontWeight,\n        fontSize: tokens?.body?.fontSize,\n        MozOsxFontSmoothing: tokens?.body?.mozOsxFontSmoothing,\n        WebkitFontSmoothing: tokens?.body?.webkitFontSmoothing,\n      },\n    ],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } as Record<string, any>;\n});\n\n/**\n * Hook to add class to body element.\n */\nfunction useApplyClassToBody(state: ThemeProviderState, classesToApply: string[]): void {\n  const { applyTo } = state;\n\n  const applyToBody = applyTo === 'body';\n  const body = useDocument()?.body;\n\n  React.useEffect(() => {\n    if (!applyToBody || !body) {\n      return;\n    }\n\n    for (const classToApply of classesToApply) {\n      if (classToApply) {\n        body.classList.add(classToApply);\n      }\n    }\n\n    return () => {\n      if (!applyToBody || !body) {\n        return;\n      }\n\n      for (const classToApply of classesToApply) {\n        if (classToApply) {\n          body.classList.remove(classToApply);\n        }\n      }\n    };\n  }, [applyToBody, body, classesToApply]);\n}\n\nexport function useThemeProviderClasses(state: ThemeProviderState): void {\n  const classes = useThemeProviderStyles(state);\n  const { className, applyTo } = state;\n\n  useApplyClassToBody(state, [classes.root, classes.body]);\n\n  state.className = css(className, classes.root, applyTo === 'element' && classes.body);\n}\n"]}