{"version":3,"file":"useThemeProvider.js","sourceRoot":"../src/","sources":["useThemeProvider.tsx"],"names":[],"mappings":";;AACA,6BAA+B;AAC/B,6DAAsE;AACtE,gEAAwE;AACxE,iEAAgE;AAChE,qDAAsD;AAEtD,IAAM,UAAU,GAAG,sBAAc,EAAsB,CAAC;AAExD;;;GAGG;AACU,QAAA,gBAAgB,GAAG,UAC9B,KAAyB,EACzB,GAA2B,EAC3B,YAAgC;IAEhC,IAAM,OAAO,GAAG,2BAAa,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAc,IAAI,CAAC,CAAC,CAAC;IACpE,IAAM,KAAK,GAAG,UAAU,CACtB;QACE,GAAG,EAAE,OAAO;QACZ,EAAE,EAAE,KAAK;KACV,EACD,YAAY,EACZ,KAAK,CACN,CAAC;IACF,0BAA0B;IAC1B,6CAAqB,CAAC,KAAK,CAAC,CAAC;IAE7B,OAAO;QACL,KAAK,OAAA;QACL,MAAM,2CAAA;KACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ThemeProviderProps, ThemeProviderState } from './ThemeProvider.types';\nimport * as React from 'react';\nimport { renderThemeProvider as render } from './renderThemeProvider';\nimport { makeMergeProps } from '@fluentui/react-compose/lib/next/index';\nimport { useThemeProviderState } from './useThemeProviderState';\nimport { useMergedRefs } from '@uifabric/react-hooks';\n\nconst mergeProps = makeMergeProps<ThemeProviderState>();\n\n/**\n * Returns the ThemeProvider render function and calculated state, given user input, ref, and\n * a set of default prop values.\n */\nexport const useThemeProvider = (\n  props: ThemeProviderProps,\n  ref: React.Ref<HTMLElement>,\n  defaultProps: ThemeProviderProps,\n) => {\n  const rootRef = useMergedRefs(ref, React.useRef<HTMLElement>(null));\n  const state = mergeProps(\n    {\n      ref: rootRef,\n      as: 'div',\n    },\n    defaultProps,\n    props,\n  );\n  // Apply changes to state.\n  useThemeProviderState(state);\n\n  return {\n    state,\n    render,\n  };\n};\n"]}