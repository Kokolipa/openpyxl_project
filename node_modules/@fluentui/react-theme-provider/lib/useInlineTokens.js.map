{"version":3,"file":"useInlineTokens.js","sourceRoot":"../src/","sources":["useInlineTokens.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D;;;;;GAKG;AACH,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,UAAkE,EAAE,MAAc;IACxG,IAAA,0BAAM,EAAE,wBAAK,CAAgB;IAErC,IAAI,MAAM,EAAE;QACV,UAAU,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QAC/B,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;KACvD;AACH,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { TokenSetType } from '@fluentui/theme';\nimport { tokensToStyleObject } from './tokensToStyleObject';\n\n/**\n * Hook which given draftState, will ensure that tokens are spit out to inline styles.\n * @param draftState - state to read and manipulate. Expected to have `tokens` prop, will\n * transform into inline\n * @param prefix - prefix to prepend to variables (e.g. \"--button\")\n */\nexport const useInlineTokens = (draftState: { style?: React.CSSProperties; tokens?: TokenSetType }, prefix: string) => {\n  const { tokens, style } = draftState;\n\n  if (tokens) {\n    draftState.style = style || {};\n    tokensToStyleObject(tokens, prefix, draftState.style);\n  }\n};\n"]}