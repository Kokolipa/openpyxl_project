{"version":3,"file":"ThemeProvider.js","sourceRoot":"../src/","sources":["ThemeProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,sCAAsC,CAAC;AAC3E,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD;;GAEG;AACH,MAAM,CAAC,IAAM,aAAa,GAAgD,KAAK,CAAC,UAAU,CAGxF,UAAC,KAAyB,EAAE,GAA8B;IACpD,IAAA;;;;;MAKJ,EALM,kBAAM,EAAE,gBAKd,CAAC;IAEH,kCAAkC;IAClC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAEvC,iBAAiB;IACjB,uBAAuB,CAAC,KAAK,CAAC,CAAC;IAE/B,yCAAyC;IACzC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzB,+BAA+B;IAC/B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,aAAa,CAAC,WAAW,GAAG,eAAe,CAAC","sourcesContent":["import * as React from 'react';\nimport { ThemeProviderProps } from './ThemeProvider.types';\nimport { useThemeProviderClasses } from './useThemeProviderClasses';\nimport { useThemeProvider } from './useThemeProvider';\nimport { mergeStylesRenderer } from './styleRenderers/mergeStylesRenderer';\nimport { useStylesheet } from '@fluentui/react-stylesheets';\nimport { useFocusRects } from '@uifabric/utilities';\n\n/**\n * ThemeProvider, used for providing css variables and registering stylesheets.\n */\nexport const ThemeProvider: React.FunctionComponent<ThemeProviderProps> = React.forwardRef<\n  HTMLDivElement,\n  ThemeProviderProps\n>((props: ThemeProviderProps, ref: React.Ref<HTMLDivElement>) => {\n  const { render, state } = useThemeProvider(props, ref, {\n    // The renderer default value is required to be defined, so if you're recomposing\n    // this component, be sure to do so.\n    renderer: mergeStylesRenderer,\n    applyTo: 'element',\n  });\n\n  // Register stylesheets as needed.\n  useStylesheet(state.theme.stylesheets);\n\n  // Render styles.\n  useThemeProviderClasses(state);\n\n  // Apply focus rect class on key presses.\n  useFocusRects(state.ref);\n\n  // Return the rendered content.\n  return render(state);\n});\n\nThemeProvider.displayName = 'ThemeProvider';\n"]}