{"version":3,"file":"GroupHeader.base.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupHeader.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IProcessedStyleSet, ITheme } from '../../Styling';\nimport { composeRenderFunction, classNamesFunction, getId, getRTL, getRTLSafeKeyCode, KeyCodes } from '../../Utilities';\nimport { SelectionMode } from '../../Selection';\nimport { Check } from '../../Check';\nimport { Icon } from '../../Icon';\nimport { GroupSpacer } from './GroupSpacer';\nimport { Spinner } from '../../Spinner';\nimport {\n  IGroupHeaderStyleProps,\n  IGroupHeaderStyles,\n  IGroupHeaderProps,\n  IGroupHeaderCheckboxProps,\n} from './GroupHeader.types';\n\nconst getClassNames = classNamesFunction<IGroupHeaderStyleProps, IGroupHeaderStyles>();\n\nexport interface IGroupHeaderState {\n  isCollapsed: boolean;\n  isLoadingVisible: boolean;\n}\n\nexport class GroupHeaderBase extends React.Component<IGroupHeaderProps, IGroupHeaderState> {\n  public static defaultProps: IGroupHeaderProps = {\n    expandButtonProps: { 'aria-label': 'expand collapse group' },\n  };\n\n  private _classNames: IProcessedStyleSet<IGroupHeaderStyles>;\n  private _id: string;\n\n  public static getDerivedStateFromProps(\n    nextProps: IGroupHeaderProps,\n    previousState: IGroupHeaderState,\n  ): IGroupHeaderState {\n    if (nextProps.group) {\n      const newCollapsed = nextProps.group.isCollapsed;\n      const isGroupLoading = nextProps.isGroupLoading;\n      const newLoadingVisible = !newCollapsed && isGroupLoading && isGroupLoading(nextProps.group);\n\n      return {\n        ...previousState,\n        isCollapsed: newCollapsed || false,\n        isLoadingVisible: newLoadingVisible || false,\n      };\n    }\n\n    return previousState;\n  }\n\n  constructor(props: IGroupHeaderProps) {\n    super(props);\n\n    this._id = getId('GroupHeader');\n\n    this.state = {\n      isCollapsed: (this.props.group && this.props.group.isCollapsed) as boolean,\n      isLoadingVisible: false,\n    };\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      group,\n      groupLevel = 0,\n      viewport,\n      selectionMode,\n      loadingText,\n      // eslint-disable-next-line deprecation/deprecation\n      isSelected = false,\n      selected = false,\n      indentWidth,\n      onRenderGroupHeaderCheckbox,\n      isCollapsedGroupSelectVisible = true,\n      expandButtonProps,\n      expandButtonIcon,\n      selectAllButtonProps,\n      theme,\n      styles,\n      className,\n      compact,\n      ariaPosInSet,\n      ariaSetSize,\n      ariaRowIndex,\n      useFastIcons,\n    } = this.props;\n\n    const onRenderTitle = this.props.onRenderTitle\n      ? composeRenderFunction(this.props.onRenderTitle, this._onRenderTitle)\n      : this._onRenderTitle;\n\n    const defaultCheckboxRender = useFastIcons ? this._fastDefaultCheckboxRender : this._defaultCheckboxRender;\n\n    const onRenderCheckbox = onRenderGroupHeaderCheckbox\n      ? composeRenderFunction(onRenderGroupHeaderCheckbox, defaultCheckboxRender)\n      : defaultCheckboxRender;\n\n    const { isCollapsed, isLoadingVisible } = this.state;\n\n    const canSelectGroup = selectionMode === SelectionMode.multiple;\n    const isSelectionCheckVisible = canSelectGroup && (isCollapsedGroupSelectVisible || !(group && group.isCollapsed));\n    const currentlySelected = selected || isSelected;\n\n    const isRTL = getRTL(theme);\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      selected: currentlySelected,\n      isCollapsed,\n      compact,\n    });\n\n    if (!group) {\n      return null;\n    }\n\n    return (\n      <div\n        className={this._classNames.root}\n        style={viewport ? { minWidth: viewport.width } : {}}\n        role=\"row\"\n        aria-setsize={ariaSetSize}\n        aria-posinset={ariaPosInSet}\n        aria-rowindex={ariaRowIndex}\n        data-is-focusable={true}\n        onKeyUp={this._onKeyUp}\n        aria-label={group.ariaLabel}\n        aria-labelledby={group.ariaLabel ? undefined : this._id}\n        aria-expanded={!this.state.isCollapsed}\n        aria-selected={canSelectGroup ? currentlySelected : undefined}\n        aria-level={groupLevel + 1}\n        data-selection-index={group.startIndex}\n        data-selection-span={group.count}\n      >\n        <div className={this._classNames.groupHeaderContainer} role=\"presentation\">\n          {isSelectionCheckVisible ? (\n            <div role=\"gridcell\">\n              <button\n                data-is-focusable={false}\n                type=\"button\"\n                className={this._classNames.check}\n                role=\"checkbox\"\n                id={`${this._id}-check`}\n                aria-checked={currentlySelected}\n                aria-labelledby={`${this._id}-check ${this._id}`}\n                data-selection-toggle={true}\n                {...selectAllButtonProps}\n              >\n                {onRenderCheckbox({ checked: currentlySelected, theme }, onRenderCheckbox)}\n              </button>\n            </div>\n          ) : (\n            selectionMode !== SelectionMode.none && <GroupSpacer indentWidth={indentWidth} count={1} />\n          )}\n\n          <GroupSpacer indentWidth={indentWidth} count={groupLevel!} />\n\n          <div className={this._classNames.dropIcon} role=\"presentation\">\n            <Icon iconName=\"Tag\" />\n          </div>\n          <div role=\"gridcell\">\n            <button\n              data-is-focusable={false}\n              data-selection-disabled={true}\n              type=\"button\"\n              className={this._classNames.expand}\n              onClick={this._onToggleClick}\n              aria-expanded={!this.state.isCollapsed}\n              {...expandButtonProps}\n            >\n              <Icon\n                className={this._classNames.expandIsCollapsed}\n                iconName={expandButtonIcon || (isRTL ? 'ChevronLeftMed' : 'ChevronRightMed')}\n              />\n            </button>\n          </div>\n\n          {onRenderTitle(this.props)}\n          {isLoadingVisible && <Spinner label={loadingText} />}\n        </div>\n      </div>\n    );\n  }\n\n  private _toggleCollapse = () => {\n    const { group, onToggleCollapse, isGroupLoading } = this.props;\n    const { isCollapsed } = this.state;\n\n    const newCollapsed = !isCollapsed;\n    const newLoadingVisible = !newCollapsed && isGroupLoading && isGroupLoading(group!);\n\n    this.setState({\n      isCollapsed: newCollapsed,\n      isLoadingVisible: newLoadingVisible as boolean,\n    });\n    if (onToggleCollapse) {\n      onToggleCollapse(group!);\n    }\n  };\n\n  private _onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { group, onGroupHeaderKeyUp } = this.props;\n\n    if (onGroupHeaderKeyUp) {\n      onGroupHeaderKeyUp(ev, group!);\n    }\n\n    if (!ev.defaultPrevented) {\n      const shouldOpen = this.state.isCollapsed && ev.which === getRTLSafeKeyCode(KeyCodes.right, this.props.theme);\n      const shouldClose = !this.state.isCollapsed && ev.which === getRTLSafeKeyCode(KeyCodes.left, this.props.theme);\n      if (shouldClose || shouldOpen) {\n        this._toggleCollapse();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    }\n  };\n\n  private _onToggleClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._toggleCollapse();\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onHeaderClick = (): void => {\n    const { group, onGroupHeaderClick } = this.props;\n\n    if (onGroupHeaderClick) {\n      onGroupHeaderClick(group!);\n    }\n  };\n\n  private _defaultCheckboxRender(checkboxProps: IGroupHeaderCheckboxProps) {\n    return <Check checked={checkboxProps.checked} />;\n  }\n\n  private _fastDefaultCheckboxRender(checkboxProps: IGroupHeaderCheckboxProps) {\n    return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n  }\n\n  private _onRenderTitle = (props: IGroupHeaderProps): JSX.Element | null => {\n    const { group } = props;\n\n    if (!group) {\n      return null;\n    }\n\n    const onRenderName = props.onRenderName\n      ? composeRenderFunction(props.onRenderName, this._onRenderName)\n      : this._onRenderName;\n\n    return (\n      <div\n        className={this._classNames.title}\n        id={this._id}\n        onClick={this._onHeaderClick}\n        role=\"gridcell\"\n        aria-colspan={this.props.ariaColSpan}\n        data-selection-invoke={true}\n      >\n        {onRenderName(props)}\n      </div>\n    );\n  };\n\n  private _onRenderName = (props: IGroupHeaderProps): JSX.Element | null => {\n    const { group } = props;\n\n    if (!group) {\n      return null;\n    }\n\n    return (\n      <>\n        <span>{group.name}</span>\n        {\n          // hasMoreData flag is set when grouping is throttled by SPO server which in turn resorts to regular\n          // sorting to simulate grouping behaviors, in which case group count is the number of items returned\n          // so far. That's the reason we need to use \"+\" to show we might have more items than count\n          // indicates.\n        }\n        <span className={this._classNames.headerCount}>\n          ({group.count}\n          {group.hasMoreData && '+'})\n        </span>\n      </>\n    );\n  };\n}\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n"]}