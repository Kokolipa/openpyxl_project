{"version":3,"file":"DatePicker.styles.js","sourceRoot":"../src/","sources":["components/DatePicker/DatePicker.styles.ts"],"names":[],"mappings":";;AACA,yCAAiH;AAEjH,IAAM,gBAAgB,GAAG;IACvB,IAAI,EAAE,eAAe;IACrB,OAAO,EAAE,uBAAuB;IAChC,SAAS,EAAE,iCAAiC;IAC5C,YAAY,EAAE,oCAAoC;IAClD,QAAQ,EAAE,uBAAuB;CAClC,CAAC;AAEF,IAAM,gBAAgB,GAAG,EAAE,CAAC;AAEf,QAAA,MAAM,GAAG,UAAC,KAA4B;;IACzC,IAAA,2BAAS,EAAE,mBAAK,EAAE,yBAAQ,EAAE,6BAAU,EAAE,mBAAK,EAAE,2CAAiB,CAAW;IAC3E,IAAA,uBAAO,EAAE,qCAAc,EAAE,uBAAO,EAAE,mBAAK,CAAW;IAC1D,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAEhE,IAAM,cAAc,GAAW;QAC7B,KAAK,EAAE,OAAO,CAAC,gBAAgB;QAC/B,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;QACnC,UAAU,EAAE,MAAM;QAClB,aAAa,EAAE,MAAM;QACrB,QAAQ,EAAE,UAAU;QACpB,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,KAAK;KACf,CAAC;IAEF,OAAO;QACL,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,iBAAiB,IAAI,SAAS,EAAE,mBAAS,EAAE,SAAS,CAAC;QACjG,SAAS,EAAE;YACT;gBACE,QAAQ,EAAE,UAAU;gBACpB,SAAS,EAAE;oBACT,mBAAmB,EAAE;wBACnB,MAAM,EAAE,SAAS;qBAClB;oBACD,KAAK,EAAE;wBACL,SAAS,EAAE;4BACT,aAAa,EAAE;gCACb,OAAO,EAAE,MAAM;6BAChB;yBACF;qBACF;iBACF;aACF;YACD,QAAQ,IAAI;gBACV,SAAS,EAAE;oBACT,mBAAmB,EAAE;wBACnB,MAAM,EAAE,SAAS;qBAClB;iBACF;aACF;SACF;QACD,OAAO,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC;QAChE,IAAI,EAAE;YACJ,cAAc;YACd,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY;YACtD,EAAE,UAAU,EAAE,KAAK,EAAE;YACrB,CAAC,QAAQ,IAAI;gBACX,UAAU,CAAC,QAAQ;gBACnB;oBACE,aAAa,EAAE,SAAS;oBACxB,MAAM,EAAE,SAAS;iBAClB;aACF;YACD,QAAQ,IAAI;gBACV,KAAK,EAAE,cAAc,CAAC,YAAY;gBAClC,MAAM,EAAE,SAAS;aAClB;SACF;QACD,iBAAiB,EAAE;YACjB;gBACE,MAAM,EAAE,SAAS;gBACjB,MAAM,EAAE,gBAAgB;gBACxB,UAAU,EAAE,gBAAgB,GAAG,CAAC;gBAChC,QAAQ,EAAE,QAAQ;gBAClB,YAAY,EAAE,UAAU;gBACxB,SAAS;oBACP,GAAC,SAAS,IAAG,4BAAkB,CAAC,cAAc,CAAC,mBAAmB,EAAE,OAAO,CAAC,cAAc,CAAC;uBAC5F;aACF;YACD,UAAU,IAAI;gBACZ,UAAU,EAAE,gBAAgB,GAAG,CAAC;aACjC;SACF;QACD,mBAAmB;gBACjB,KAAK,EAAE,cAAc,CAAC,oBAAoB;;YAC1C,GAAC,8BAAoB,IAAG;gBACtB,KAAK,EAAE,UAAU;aAClB;eACF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { IDatePickerStyleProps, IDatePickerStyles } from './DatePicker.types';\nimport { IStyle, normalize, getGlobalClassNames, HighContrastSelector, getInputFocusStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-DatePicker',\n  callout: 'ms-DatePicker-callout',\n  withLabel: 'ms-DatePicker-event--with-label',\n  withoutLabel: 'ms-DatePicker-event--without-label',\n  disabled: 'msDatePickerDisabled ',\n};\n\nconst TEXTFIELD_HEIGHT = 32;\n\nexport const styles = (props: IDatePickerStyleProps): IDatePickerStyles => {\n  const { className, theme, disabled, underlined, label, isDatePickerShown } = props;\n  const { palette, semanticColors, effects, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const DatePickerIcon: IStyle = {\n    color: palette.neutralSecondary,\n    fontSize: fonts.mediumPlus.fontSize,\n    lineHeight: '18px',\n    pointerEvents: 'none',\n    position: 'absolute',\n    right: '4px',\n    padding: '5px',\n  };\n\n  return {\n    root: [classNames.root, theme.fonts.medium, isDatePickerShown && 'is-open', normalize, className],\n    textField: [\n      {\n        position: 'relative',\n        selectors: {\n          '& input[readonly]': {\n            cursor: 'pointer',\n          },\n          input: {\n            selectors: {\n              '::-ms-clear': {\n                display: 'none',\n              },\n            },\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          '& input[readonly]': {\n            cursor: 'default',\n          },\n        },\n      },\n    ],\n    callout: [classNames.callout, { boxShadow: effects.elevation8 }],\n    icon: [\n      DatePickerIcon,\n      label ? classNames.withLabel : classNames.withoutLabel,\n      { paddingTop: '7px' },\n      !disabled && [\n        classNames.disabled,\n        {\n          pointerEvents: 'initial',\n          cursor: 'pointer',\n        },\n      ],\n      disabled && {\n        color: semanticColors.disabledText,\n        cursor: 'default',\n      },\n    ],\n    readOnlyTextField: [\n      {\n        cursor: 'pointer',\n        height: TEXTFIELD_HEIGHT,\n        lineHeight: TEXTFIELD_HEIGHT - 2,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        selectors: {\n          ['&:focus']: getInputFocusStyle(semanticColors.inputFocusBorderAlt, effects.roundedCorner2),\n        },\n      },\n      underlined && {\n        lineHeight: TEXTFIELD_HEIGHT + 2,\n      },\n    ],\n    readOnlyPlaceholder: {\n      color: semanticColors.inputPlaceholderText,\n      [HighContrastSelector]: {\n        color: 'GrayText',\n      },\n    },\n  };\n};\n"]}